#!/usr/bin/env python
from __future__ import print_function
import numpy
from argparse import ArgumentParser
import reredux
import fitsio
import esutil as eu

parser = ArgumentParser()

parser.add_argument('run', help='run to use in fit')

parser.add_argument('--weights',action='store_true',help='use weights')

parser.add_argument('--show',action='store_true',help='show plot')
parser.add_argument('--yrange', help="yrange of plot")
parser.add_argument('--xrange', help="xrange of plot")

parser.add_argument('--fit-only',action='store_true',
                    help='get the means from the written file')

parser.add_argument('--cache',action='store_true',
                    help=('cache the file subset locally; use the cache '
                          'if available'))

parser.add_argument('--test',action='store_true',
                    help='do a quick test with a subset of rows')
parser.add_argument('--ntest',default=100000,type=int,
                    help='size of teset')


def main():
    args = parser.parse_args()
    cls = reredux.averaging.AveragerDetrend
    av=cls(
        args.run,
        do_test=args.test,
        ntest=args.ntest,
        fit_only=args.fit_only,
        use_weights=args.weights,
        use_cache=args.cache,
        show=args.show,
    )
    av.go()
    av.doplot(args)

main()
